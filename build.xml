<project name="javartm" basedir="." default="jar">
	<property name="src.dir" value="src"/>
	<property name="java.src.dir" value="${src.dir}/java"/>
	<property name="c.src.dir" value="${src.dir}/c"/>

	<property name="build.dir" value="build"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jni.dir" value="${build.dir}/jni"/>
	<property name="jnioutput.dir" value="${jni.dir}/javartm"/>
	<property name="jnilib.file" value="${jnioutput.dir}/javartm"/>

	<property name="jars.dir" value="lib"/>
	<property name="dist.dir" location="dist"/>
	<property name="dist.version" value="0.1"/>
	<property name="jar.filename" value="javartm-${dist.version}.jar"/>
	<property name="jar.file" value="${dist.dir}/${jar.filename}"/>
	<property name="jarfat.file" value="${dist.dir}/javartm-fat-${dist.version}.jar"/>

	<path id="jars-classpath">
		<fileset dir="${jars.dir}" >
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>

	<target name="java-compile">
		<mkdir dir="${classes.dir}"/>
		<javac includeantruntime="false" srcdir="${java.src.dir}" destdir="${classes.dir}" debug="true" deprecation="true" debuglevel="lines,vars,source">
			<compilerarg value="-Xlint:unchecked"/>
			<classpath>
				<path refid="jars-classpath"/>
			</classpath>
		</javac>
	</target>

	<target name="jni-headers" depends="java-compile">
		<mkdir dir="${jni.dir}"/>
		<javah destdir="${jni.dir}">
			<classpath>
				<path path="${classes.dir}"/>
			</classpath>
			<class name="javartm.Transaction"/>
		</javah>
	</target>

	<!-- cpptasks support -->
	<target name="jni-compile" depends="jni-headers">
		<taskdef resource="cpptasks.tasks"/>
		<mkdir dir="${jnioutput.dir}"/>
		<cc outtype="shared" subsystem="console" objdir="${jni.dir}" outfile="${jnilib.file}">
			<compilerarg value="-Wall"/>
			<compilerarg value="-O2"/>
			<compilerarg value="-mrtm"/>
			<fileset dir="${c.src.dir}" includes="**/*.c"/>
			<includepath>
				<path path="${java.home}/../include"/>
				<path path="${jni.dir}"/>
			</includepath>
		</cc>
	</target>

	<target name="oldgcc-jni-compile" depends="jni-headers">
		<taskdef resource="cpptasks.tasks"/>
		<mkdir dir="${jnioutput.dir}"/>
		<cc outtype="shared" subsystem="console" objdir="${jni.dir}" outfile="${jnilib.file}">
			<compilerarg value="-Wall"/>
			<compilerarg value="-O2"/>
			<defineset define="JAVARTM_RTM_INTRINSICS"/>
			<fileset dir="${c.src.dir}" includes="**/*.c"/>
			<includepath>
				<path path="${java.home}/../include"/>
				<path path="${jni.dir}"/>
			</includepath>
		</cc>
	</target>

	<target name="build" depends="clean,jni-compile" description="Builds javartm (java and native resources)"/>
	<target name="oldgcc-build" depends="clean,oldgcc-jni-compile" description="Builds javartm (java and native resources) [GCC &lt; 4.8]"/>

	<target name="generate-jar">
		<mkdir dir="${dist.dir}"/>
		<jar destfile="${jar.file}">
			<manifest>
				<!-- Who is building this jar? -->
				<attribute name="Built-By" value="${user.name}"/>
				<!-- Information about the program itself -->
				<attribute name="Implementation-Vendor" value="javartm project"/>
				<attribute name="Implementation-Title" value="javartm"/>
				<attribute name="Implementation-Version" value="${dist.version}"/>
			</manifest>

			<fileset dir="${classes.dir}" excludes="**/*Test*.class"/>
			<fileset dir="${jni.dir}" includes="**/*.so"/>
		</jar>
	</target>
	
	<target name="jar" depends="build,generate-jar" description="Generates the javartm jar"/>
	<target name="oldgcc-jar" depends="oldgcc-build,generate-jar" description="Generates the javartm jar [GCC &lt; 4.8]"/>

	<target name="generate-fat-jar">
		<jar destfile="${jarfat.file}">
			<manifest>
				<!-- Who is building this jar? -->
				<attribute name="Built-By" value="${user.name}"/>
				<!-- Information about the program itself -->
				<attribute name="Implementation-Vendor" value="javartm project"/>
				<attribute name="Implementation-Title" value="javartm"/>
				<attribute name="Implementation-Version" value="${dist.version}"/>
			</manifest>

			<archives>
				<zips>
					<fileset dir="${jars.dir}" includes="**/*.jar"/>
					<fileset dir="${dist.dir}" includes="${jar.filename}"/>
				</zips>
			</archives>
		</jar>
	</target>

	<target name="fat-jar" depends="jar" description="Generates a fat javartm jar including all dependencies"/>
	<target name="oldgcc-fat-jar" depends="oldgcc-jar" description="Generates a fat javartm jar including all dependencies [GCC &lt; 4.8]"/>

	<!-- aliases -->
	<target name="main" depends="build"/>
	<target name="compile" depends="build"/>
	<target name="clean-all" depends="clean"/>
	<!--<target name="dist" depends="jar"/>-->
</project>
